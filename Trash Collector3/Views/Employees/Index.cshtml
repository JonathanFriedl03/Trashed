@model Trash_Collector3.Models.EmployeeViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
}

<br />
<div class="border backgroundWhite">
    <div class="row">
        <div class="col-12">
            <h1 class="text-capitalize text-center text-success">Hello @Html.Raw(Model.Employee.FirstName)</h1>
        </div>

    </div>
    <br />
    <div>

        <h2 class="text-info">Daily Pickups</h2>
        <br />
        
       
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-info"></div>
            <div class="form-group">
                <label asp-for="DaySelected" class="control-label text-black">Pick Up Day</label>
                <br /><label asp-for="DaySelected" class="control-label text-black">@Html.Raw(Model.Employee.ZipCode)</label>
                <select asp-for="DaySelected" class="form-control">
                    <option value="Monday">Monday</option>
                    <option value="Tuesday">Tuesday</option>
                    <option value="Wednesday">Wednesday</option>
                    <option value="Thursday">Thursday</option>
                    <option value="Friday">Friday</option>
                </select>
                <span asp-validation-for="DaySelected" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
        </form>
        <br />
        <h2>@Model.DaySelected</h2>
        <table id="tblData" class="table table-striped border">
            <thead>
                <tr class="table-secondary">
                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].ZipCode)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].StartOfSuspension)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].EndOfSupspension)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].OneTimePickUp)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Customers[0].Balance)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Customers.Count; i++)
                {

                    @if (Model.DaySelected == Model.Customers[i].PickUpDay && Model.Employee.ZipCode == Model.Customers[i].ZipCode)
                    {
                <tr>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].Address)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].ZipCode)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].StartOfSuspension)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].EndOfSupspension)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].OneTimePickUp)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.Customers[i].Balance)
                    </td>

                    <td>
                        <a asp-action="ConfirmPickup" asp-route-id="@Model.Customers[i].Id">Confirm Pickup</a> |


                    </td>

                </tr>
                    }
                }
            </tbody>
        </table><table>
            <td class="whiteSpace" colspan="1" width:5px">
                <a asp-action="Edit" class="btn btn-warning" asp-route-id="@Model.Employee.Id"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                <a asp-action="Details" class="btn btn-info" asp-route-id="@Model.Employee.Id"><i class="fas fa-search"></i></a>
               
            </td>
        </table>
        <style>
            /* Set the size of the div element that contains the map */
            #map {
                height: 400px; /* The height is 400 pixels */
                width: 400px; /* The width is the width of the web page */
            }
        </style>
        <div class="row">
            <div id="map"></div>
            <script>
                // Initialize and add the map
                function initMap() {
                    var mapOptions = {
                        zoom: 11,
                        center: new google.maps.LatLng(42.914411, -87.865553)
                    }
                    var map = new google.maps.Map(document.getElementById('map'), mapOptions);
                   
                    //call addMark function
                    addMarker({ lat: 42.914411, lng: -87.865553 });
                    addMarker({ lat: 43.034528, lng: -87.911926 });
                    addMarker({ lat: 42.935494, lng: -87.960964 });
                    //add marker function
                    function addMarker(coords) {
                        var marker = new google.maps.Marker({
                            position: coords,
                            map: map,
                            title: 'Customer Location'
                        });
                    }
                }
            </script>

            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCegT-SJf2mbYChjlj5zdn0rsOKSIlzHE8&callback=initMap">
            </script>

        </div>
